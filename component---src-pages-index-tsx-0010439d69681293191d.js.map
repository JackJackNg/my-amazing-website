{"version":3,"sources":["webpack:///./src/components/Hero/index.tsx","webpack:///./src/components/Experience/List.tsx","webpack:///./src/components/Experience/index.tsx","webpack:///./src/components/Skill/index.tsx","webpack:///./src/components/FadeIn/index.tsx","webpack:///./src/components/ScrollReveal/index.tsx","webpack:///./src/pages/index.tsx"],"names":["Hero","props","_React$useState","React","isMounted","setMounted","_props$data$0$node","data","node","frontmatter","html","cancenlListner","setTimeout","clearTimeout","items","react","className","Styles","strong","title","name","subtitle","key","Math","random","dangerouslySetInnerHTML","__html","id","hero","TransitionGroup","map","v","i","components_FadeIn","in","timeout","List","_props$selected","selected","currentSelectedRef","useRef","react_default","a","createElement","experienceList","index","isSelected","experienceListItem","ref","onClick","onChange","company","Experience","_useState","useState","setSelected","objectDestructuringEmpty_default","_props$data$selected$","jobs","components_ScrollReveal","section","sectionTitle","content","divider","experience","Experience_List","experienceBlock","experienceBlockTitle","experienceBlockPeriod","range","experienceBlockDescription","Skill","_ref","_data$0$node","console","log","skillList","skills","defaultStyle","transition","opacity","transitionStyles","entering","transform","entered","exiting","exited","FadeIn","children","inProps","Transition","state","style","Object","assign","ScrollReveal","sr","reveal","current","origin","distance","duration","delay","rotate","x","y","z","scale","easing","mobile","reset","useDelay","viewFactor","viewOffset","top","right","bottom","left","__webpack_require__","d","__webpack_exports__","myQuery","IndexPage","layout","components_Hero","edges","components_Skill","skill","components_Experience"],"mappings":"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","file":"component---src-pages-index-tsx-0010439d69681293191d.js","sourcesContent":["import * as React from 'react'\nimport Styles from '../../styles/main.module.scss'\nimport { FadeIn } from '../../components'\nimport { MarkdownNode } from '../../types'\nimport { TransitionGroup } from 'react-transition-group'\n\ninterface Props {\n  data: MarkdownNode[]\n}\n\nconst Hero: React.SFC<Props> = props => {\n  const [isMounted, setMounted] = React.useState(false)\n  const { frontmatter, html } = props.data[0].node\n\n  React.useEffect(() => {\n    const cancenlListner = setTimeout(() => {\n      setMounted(true)\n    }, 300)\n\n    return () => clearTimeout(cancenlListner)\n  })\n\n  const one = (\n    <span>\n      <strong className={Styles.strong}>{frontmatter.title}</strong>\n    </span>\n  )\n  const two = <h1>{frontmatter.name}</h1>\n  const three = <h2>{frontmatter.subtitle}</h2>\n  const four = (\n    <p key={Math.random()} dangerouslySetInnerHTML={{ __html: html }} />\n  )\n  const items = [one, two, three, four]\n\n  return (\n    <section id=\"about\" className={Styles.hero}>\n      <TransitionGroup>\n        {isMounted && (\n          <div>\n            {items.map((v, i) => {\n              return (\n                <FadeIn key={i} in={isMounted} timeout={i * 200}>\n                  {v}\n                </FadeIn>\n              )\n            })}\n          </div>\n        )}\n      </TransitionGroup>\n    </section>\n  )\n}\n\nexport default Hero\n","import React, { useRef, useEffect } from 'react'\nimport Styles from '../../styles/main.module.scss'\n\ninterface Props {\n  data?: IJob[]\n  selected?: number\n  onChange: (i: number) => void\n}\n\nexport interface IJob {\n  title: string\n  company: string\n  range: string\n  description: string[]\n}\n\nconst List: React.SFC<Props> = props => {\n  const { data, selected = 0 } = props\n  const currentSelectedRef = useRef(null)\n  const handlClick = (index: number) => () => {\n    props.onChange(index)\n  }\n\n  /**\n   * the highlighter id not responsive, so currently commented out\n   */\n  // const selectorRef = useRef(null)\n\n  // useEffect(() => {\n  //   if (currentSelectedRef.current && selectorRef.current) {\n  //     const {\n  //       clientHeight,\n  //       clientWidth,\n  //       offsetLeft,\n  //       offsetTop,\n  //     } = currentSelectedRef.current\n  //     console.log(clientHeight, clientWidth, offsetLeft, offsetTop)\n\n  //     selectorRef.current.style.height = `${clientHeight}px`\n  //     selectorRef.current.style.width = `${clientWidth}px`\n  //     selectorRef.current.style.top = `${offsetTop}px`\n  //     selectorRef.current.style.left = `${offsetLeft}px`\n  //   }\n  // }, [selected])\n\n  return (\n    <ul className={Styles.experienceList}>\n      {!data\n        ? null\n        : data.map((v, i) => {\n            const isSelected = i === selected\n            return (\n              <li\n                key={i}\n                className={`\n                  ${Styles.experienceListItem} \n                  ${isSelected ? Styles.selected : ''}`}\n                ref={isSelected ? currentSelectedRef : null}\n                onClick={handlClick(i)}\n              >\n                {v.company}\n              </li>\n            )\n          })}\n      {/* <div ref={selectorRef} className={Styles.experienceListSelector} /> */}\n    </ul>\n  )\n}\n\nexport default List\n","import React, { useState } from 'react'\nimport List, { IJob } from './List'\nimport Styles from '../../styles/main.module.scss'\nimport { ScrollReveal } from '../'\nimport { MarkdownNode } from '../../types'\n\ninterface Props {\n  data: MarkdownNode[]\n}\n\n// const jobs: IJob[] = [\n//   {\n//     company: 'Freelance',\n//     title: 'Mobile Application Developer',\n//     description: [\n//       'Write modern, performant, maintainable code for a diverse array of client and internal projects',\n//       'Write modern, performant, maintainable code for a diverse array of client and internal projects',\n//     ],\n//     period: '14 May 2019 - 16 May 2019',\n//   },\n//   {\n//     company: 'Freelance 2',\n//     title: 'Mobile Application Developer',\n//     description: [\n//       'Write modern, performant, maintainable code for a diverse array of client and internal projects',\n//       'Write modern, performant, maintainable code for a diverse array of client and internal projects',\n//       'Write modern, performant, maintainable code for a diverse array of client and internal projects',\n//     ],\n//     period: '14 May 2019 - 16 May 2019',\n//   },\n//   {\n//     company: 'Freelance 2',\n//     title: 'Mobile Application Developer',\n//     description: [\n//       'Write modern, performant, maintainable code for a diverse array of client and internal projects',\n//       'Write modern, performant, maintainable code for a diverse array of client and internal projects',\n//       'Write modern, performant, maintainable code for a diverse array of client and internal projects',\n//       'Write modern, performant, maintainable code for a diverse array of client and internal projects',\n//     ],\n//     period: '14 May 2019 - 16 May 2019',\n//   },\n// ]\n\nconst Experience: React.FC<Props> = props => {\n  const [selected, setSelected] = useState(0)\n  const {} = props.data\n  const handleChange = (i: number) => {\n    setSelected(i)\n  }\n  const { frontmatter, html } = props.data[selected].node\n  const jobs = props.data.map((v, i) => {\n    return v.node.frontmatter\n  })\n  return (\n    <ScrollReveal>\n      <section id=\"experience\" className={Styles.section}>\n        <h3 className={Styles.sectionTitle}>\n          <span className={Styles.index}> 02. </span>\n          <span className={Styles.content}>Experience</span>\n          <hr className={Styles.divider} />\n        </h3>\n        <div className={Styles.experience}>\n          <List data={jobs} selected={selected} onChange={handleChange} />\n          <div className={Styles.experienceBlock}>\n            <h4>\n              <strong className={Styles.strong}>@{frontmatter.company}</strong>\n            </h4>\n            <h4 className={Styles.experienceBlockTitle}>{frontmatter.title}</h4>\n            <h4 className={Styles.experienceBlockPeriod}>\n              {frontmatter.range}\n            </h4>\n            <div\n              className={Styles.experienceBlockDescription}\n              dangerouslySetInnerHTML={{ __html: html }}\n            >\n              {/* <ul>\n                {selectedJob.description.map((v, i) => (\n                  <li key={i}>{v}</li>\n                ))}\n              </ul> */}\n            </div>\n          </div>\n        </div>\n      </section>\n    </ScrollReveal>\n  )\n}\n\nexport default Experience\n","import * as React from 'react'\nimport Styles from '../../styles/main.module.scss'\nimport { ScrollReveal } from '../../components'\nimport { MarkdownNode } from '../../types'\n\ninterface Props {\n  data: MarkdownNode[]\n}\n\nconst Skill: React.SFC<Props> = ({ data }) => {\n  const { frontmatter, html } = data[0].node\n  console.log(data)\n\n  return (\n    <ScrollReveal>\n      <section id=\"skill\" className={Styles.section}>\n        <h3 className={Styles.sectionTitle}>\n          <span className={Styles.index}> 01. </span>\n          <span className={Styles.content}>Skill </span>\n          <hr className={Styles.divider} />\n        </h3>\n        <p dangerouslySetInnerHTML={{ __html: html }} />\n        <div>\n          <ul className={Styles.skillList}>\n            {frontmatter.skills.map((v, i) => {\n              return <li key={v}>{v}</li>\n            })}\n            <li>\n              <strong className={Styles.strong}>Read more</strong>\n            </li>\n          </ul>\n        </div>\n      </section>\n    </ScrollReveal>\n  )\n}\n\nexport default Skill\n","import * as React from 'react'\nimport { TransitionProps } from 'react-transition-group/Transition'\nimport { Transition } from 'react-transition-group'\n\nconst duration = 0\n\nconst defaultStyle = {\n  transition: `opacity ${duration}ms ease-in`,\n  opacity: 0,\n}\n\nconst transitionStyles = {\n  entering: {\n    opacity: 0,\n    transform: 'translateY(-20px)',\n  },\n  entered: {\n    opacity: 1,\n    transform: 'translateY(0px)',\n    transition: 'all 0.2s ease-in',\n  },\n  exiting: { opacity: 1 },\n  exited: { opacity: 0 },\n}\n\nconst FadeIn: React.FC<TransitionProps> = ({\n  children,\n  timeout,\n  in: inProps,\n}) => (\n  <Transition in={inProps} timeout={timeout}>\n    {state => (\n      <div\n        style={{\n          ...defaultStyle,\n          ...transitionStyles[state],\n        }}\n      >\n        {children}\n      </div>\n    )}\n  </Transition>\n)\n\nexport default FadeIn\n","import * as React from 'react'\nimport sr from 'scrollreveal'\n\nconst ScrollReveal: React.FC = props => {\n  const ref = React.useRef(null)\n  React.useEffect(() => {\n    sr().reveal(ref.current, {\n      origin: 'bottom',\n      distance: '20px',\n      duration: 400,\n      delay: 100,\n      rotate: { x: 0, y: 0, z: 0 },\n      opacity: 0,\n      scale: 1,\n      easing: 'cubic-bezier(0.645, 0.045, 0.355, 1)',\n      mobile: true,\n      reset: false,\n      useDelay: 'always',\n      viewFactor: 0.25,\n      viewOffset: { top: 0, right: 0, bottom: 0, left: 0 },\n    })\n  }, [ref.current])\n\n  return <div ref={ref}>{props.children}</div>\n}\n\nexport default ScrollReveal\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport { Layout, Hero, Skill, Experience } from '../components'\n\ntype Props = {\n  data: {\n    hero: any\n    skill: any\n    experience: any\n  }\n}\n\nconst IndexPage: React.FC<Props> = ({ data }) => {\n  return (\n    <Layout>\n      <Hero data={data.hero.edges} />\n      <Skill data={data.skill.edges} />\n      <Experience data={data.experience.edges} />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const myQuery = graphql`\n  query myQuery {\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            name\n            subtitle\n            contactText\n          }\n          html\n        }\n      }\n    }\n\n    skill: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/skill/\" } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            company\n            range\n            name\n            subtitle\n            contactText\n            skills\n          }\n          html\n        }\n      }\n    }\n\n    experience: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/experience/\" } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            company\n            range\n            name\n            subtitle\n            contactText\n            skills\n          }\n          html\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}